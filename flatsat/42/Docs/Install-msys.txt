Ab Nihilo Installation of 42 on Windows

On OSX or Linux, 42 runs right out of the box.  Windows requires some help.  I know that some of y'all are Windows users through no fault of your own, so I'll keep the commentary to a minimum.

What follows is a step-by-step recipe for obtaining the things that 42 depends on to run on Windows.  This is, as far as I know, the easiest way to go about it.  I wish it were easier, but it is what it is.

We need a C compiler --- we'll use MinGW, which includes msys as a command-line environment.  (I tried CygWin once, but it and something else were having compatibility problems at the time, so I went with MinGW.)  We also need some OpenGL support --- freeglut and glew.

1)  Install MinGW and Msys
   a)  From SourceForge, download the MinGW Installation Manager Setup Tool.
   b)  Accept the default installation location, c:\MinGW
   c)  Select the packages listed below by clicking on the box and selecting "Mark for installation":  
      i.  mingw-developer-toolkit
     ii.  mingw32-base
   d)  From the Installation menu, select "Apply Changes > Apply".   

2)  For convenience, make shortcuts for desktop:
   a)  C:\MinGW\msys\1.0\home\yourusername\42 -> 42
   b)  C:\MinGW\msys\1.0\msys.bat -> Msys
   c)  If desired, change icon for Msys shortcut to one found in ...\msys\1.0\

3)  Edit the file C:\MinGW\msys\1.0\etc\profile.  Change line 19 to read:
   export PATH=".:/usr/local/bin:/c/mingw/bin:/bin:/c/42ExternalSupport/freeglut/bin:/c/42ExternalSupport/glew/lib:$PATH"
  This adds the MinGW bin folder, freeglut folder, and glew folders (to be added in the next steps) to the default path.

4)  Download freeglut from freeglut.sourceforge.net.  You want the pre-packaged release.  Place it in C:\42ExternalSupport\

5)  Download glew (GL Extension Wrangler) source (zipped) from
glew.sourceforge.net.  (There are various kinds of libraries, apparently, and the online binaries don't support the kind that MinGW wants, so we need to build them from source.)  
   a)  Extract the glew folder (mine is glew-1.13.0), rename it to just "glew" and place it in C:\42ExternalSupport.
   b)  Copy 42/Utilities/buildglew.sh to the glew folder
   c)  In your msys terminal, cd to the glew folder and run buildglew.sh by entering "buildglew.sh" at the command prompt.

   Alternatively to (b) and (c) above, copy/paste the commands between the **** lines below.  And give thanks to sunandblackcat, because I for one would never have been able to figure this one out on my own.

**************  These lines thanks to http://www.sunandblackcat.com/tipFullView.php%3Fl%3Deng%26topicid%3D1 **************
gcc -DGLEW_NO_GLU -O2 -Wall -W -Iinclude -DGLEW_BUILD -o src/glew.o -c src/glew.c
gcc -shared -Wl,-soname,libglew32.dll -Wl,--out-implib,lib/libglew32.dll.a -o lib/glew32.dll src/glew.o -L/mingw/lib -lglu32 -lopengl32 -lgdi32 -luser32 -lkernel32
ar cr lib/libglew32.a src/glew.o
**************************************************************************************************************************

If you get a build error like this:  multiple definition of `DllMainCRTStartup@12', consider adding the option -nostdlib to the link command.  See this link for a caution, though:
http://stackoverflow.com/questions/38673228/multiple-definition-of-dllmaincrtstartup12-while-building-glew-on-windows-wit

6) Move your 42 folder into the msys directory structure, to C:\MinGW\msys\1.0\home\yourusername\42

7)  Edit your Makefile, found in your 42 folder.
   a)  Make sure your PLATFORM is __MSYS__ by commenting the first few lines appropriately.
   b)  Make sure EXTERNDIR = /c/42ExternalSupport/
   c)  Save your changes


Your installation is complete now.  The following steps are routine for compiling and running 42.  
You'll do them many times.  These assume that your current directory is C:\MinGW\msys\1.0\home\yourusername\42.

a)  To "clean up", enter this on the command line:

make clean

This deletes all object files, the executable, and all files in the InOut folder with the .42 extension (these are data files output by the 42 executable).  The first time you issue this command, you'll get some errors, since these files don't exist yet.  No problem.

It is highly recommended that you do a make clean anytime you edit any header file, and as a first step in any bug hunt.  Weird things happen if headers get out of sync with source files, and make clean wipes the slate clean.

b)  To compile and link, enter this on the command line:

make

This compiles (i.e. makes object files out of source files) any source files that have been edited since the last time "make" was done.  It then links (i.e. assembles all the object files into an executable) the program.

c)  To run 42.exe, enter this on the command line:

42

or (according to some reports)

42.exe

Depending on your configuration, the graphics windows should pop up, and event messages will begin to appear in the terminal window.

If 42 stops with an error dialog about "DLL not found", there is a problem with the path to freeglut.dll or glew.dll.  Check the path (from step 3 above) against their actual location, and make adjustments if needed.

d)  You may interrupt 42 at any time by hitting the 'q' key when the Cam window is active, or Ctrl-C when the terminal window is active.  42 will terminate on its own when the sim has run its course.


*******************************
*  Other Associated Software  *
*******************************

42 is only part of the workflow.  Install these other applications for a complete analysis/simulation suite:

1)  Wings3d (wings3d.com):  Easy-to-learn solid modeler.  Exports Wavefront OBJ files, which 42 uses for both visualization and for computation of surface forces.  Wings3d is free and multiplatform.

2)  octave (www.gnu.org/software/octave):  Free multi-platform Matlab clone.  Some builds have suboptimal plotting capabilities, but decent solutions exist on at least Windows and OSX.

3)  ffmpeg:  Command-line utility useful for making movies from screenshots.  Try homebrew (brew.sh).  Other, better, sources may exist.

For Windows, try ffmpeg.zeranoe.com/builds.  The 32-bit static build should work fine.  You may need to install 7-zip first.

4a)  Notepad++:  A code-friendly text editor for Windows.

4b)  Textwrangler:  A code-friendly text editor for OSX.