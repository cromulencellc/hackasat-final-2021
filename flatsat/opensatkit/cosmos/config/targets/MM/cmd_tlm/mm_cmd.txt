<% 
  require 'osk_config' 
  require 'osk_global'

  @APP_PREFIX_STR  = "MM"
  @CMD_MID_STR     = "MM_CMD_MID"
  
  @DEF_ADDR_SYMBOL = "default"

%>

COMMAND <%= @APP_PREFIX_STR %> <%= Osk::CMD_STR_NOOP %> <%= Osk::Cfg.processor_endian %> "Generate an info event message with app version"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 0, 0) %>

COMMAND <%= @APP_PREFIX_STR %> <%= Osk::CMD_STR_RESET %> <%= Osk::Cfg.processor_endian %> "Reset command counters"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 1, 0) %>

COMMAND MM PEEK_MEM <%= Osk::Cfg.processor_endian %> "Reads 8,16, or 32 bits of data from any given input address"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 2, 72) %>
  APPEND_PARAMETER DATA_SIZE          8 UINT MIN_UINT8 MAX_UINT8   8   "Bit size of the data to be read: 8, 16, or 32"
  APPEND_PARAMETER MEM_TYPE           8 UINT MIN_UINT8 MAX_UINT8   1   "0=No Type, 1=RAM, 2=EEPROM"
  APPEND_PARAMETER PAD_16            16 UINT MIN_UINT8 MAX_UINT8   0   "Structure padding"
  APPEND_PARAMETER ADDR_OFFSET       32 UINT MIN_UINT32 MAX_UINT32 0   "Offset from symbol or absolute address if no symbol specified"
  APPEND_PARAMETER ADDR_SYMBOL_NAME 512 STRING <%= @DEF_ADDR_SYMBOL %> "Symbol to be used as base address or empty string if no symbol"

COMMAND MM POKE_MEM <%= Osk::Cfg.processor_endian %> "Writes 8, 16, or 32 bits of data to any memory address"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 3, 76) %>
  APPEND_PARAMETER DATA_SIZE          8 UINT MIN_UINT8 MAX_UINT8 8     "Bit size of the data to be written: 8, 16, or 32"
  APPEND_PARAMETER MEM_TYPE           8 UINT MIN_UINT8 MAX_UINT8 1     "0=No Type, 1=RAM, 2=EEPROM"
  APPEND_PARAMETER PAD_16            16 UINT MIN_UINT8 MIN_UINT8 0     "Structure padding"
  APPEND_PARAMETER DATA              32 UINT MIN_UINT32 MAX_UINT32 0   "Data to be written"
  APPEND_PARAMETER ADDR_OFFSET       32 UINT MIN_UINT32 MAX_UINT32 0   "Offset from symbol or absolute address if no symbol specified"
  APPEND_PARAMETER ADDR_SYMBOL_NAME 512 STRING <%= @DEF_ADDR_SYMBOL %> "Symbol to be used as base address or empty string if no symbol"

# TODO LOAD_MEM_WID - @
COMMAND MM LOAD_MEM_WID <%= Osk::Cfg.processor_endian %> "Load processor memory with interrupts disabled. Loads up to MM_MAX_UNINTERRUPTABLE_DATA data bytes into RAM with interrupts disabled"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 4, 276) %>
  APPEND_PARAMETER NUM_BYTES          8 UINT MIN_UINT8  MAX_UINT8  0   "Number of bytes to be loaded"
  APPEND_PARAMETER PAD_8              8 UINT MIN_UINT8 MAX_UINT8   0   "Structure padding"
  APPEND_PARAMETER PAD_16            16 UINT MIN_UINT16 MAX_UINT16 0   "Structure padding"
  APPEND_PARAMETER CRC               32 UINT MIN_UINT32 MAX_UINT32 0   "Data check value"
  APPEND_PARAMETER ADDR_OFFSET       32 UINT MIN_UINT32 MAX_UINT32 0   "Offset from symbol or absolute address if no symbol specified"
  APPEND_PARAMETER ADDR_SYMBOL_NAME 512 STRING <%= @DEF_ADDR_SYMBOL %> "Symbol to be used as base address or empty string if no symbol"
  APPEND_ARRAY_PARAMETER DATA_ARRAY   8 UINT 1600                      "Data to be loaded"

COMMAND MM LOAD_MEM_FROM_FILE <%= Osk::Cfg.processor_endian %> "Loads a contiguous block of memory using the data in teh specified file"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 5, 64) %>
  APPEND_PARAMETER FILENAME 512 STRING "default" "FSW /path/filename of memory load file"

# TODO DUMP_MEM_TO_FILE - Fix length & parameters
COMMAND MM DUMP_MEM_TO_FILE <%= Osk::Cfg.processor_endian %> "Dumps the input number of bytes from processor memory to a file"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 6, 140) %>
  APPEND_PARAMETER MEM_TYPE           8 UINT MIN_UINT8 MAX_UINT8   1 "0=No Type, 1=RAM, 2=EEPROM"
  APPEND_PARAMETER PAD_8              8 UINT MIN_UINT8 MAX_UINT8   0 "Structure padding"
  APPEND_PARAMETER PAD_16            16 UINT MIN_UINT16 MAX_UINT16 0 "Structure padding"
  APPEND_PARAMETER NUM_BYTES         32 UINT MIN_UINT32 MAX_UINT32 0 "Number of bytes to fill"
  APPEND_PARAMETER ADDR_OFFSET       32 UINT MIN_UINT32 MAX_UINT32 0 "Offset from symbol or absolute address if no symbol specified"
  APPEND_PARAMETER ADDR_SYMBOL_NAME 512 STRING "default" "Symbol to be used as base address or empty string if no symbol"
  APPEND_PARAMETER FILENAME         512 STRING "default" "FSW /path/filename of memory dump file."

  
COMMAND MM DUMP_IN_EVENT <%= Osk::Cfg.processor_endian %> "Dumps up to MM_MAX_DUMP_INEVENT_BYTES of memory in an event message"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 7, 72) %>
  APPEND_PARAMETER MEM_TYPE           8 UINT MIN_UINT8 MAX_UINT8   1 "0=No Type, 1=RAM, 2=EEPROM"
  APPEND_PARAMETER NUM_BYTES          8 UINT MIN_UINT8 16          0 "Number of bytes to be dumped (max 16)"
  APPEND_PARAMETER PAD_16            16 UINT MIN_UINT16 MAX_UINT16 0 "Structure padding"
  APPEND_PARAMETER ADDR_OFFSET       32 UINT MIN_UINT32 MAX_UINT32 0 "Offset from symbol or absolute address if no symbol specified"
  APPEND_PARAMETER ADDR_SYMBOL_NAME 512 STRING "default"             "Symbol to be used as base address or empty string if no symbol"

COMMAND MM FILL_MEM <%= Osk::Cfg.processor_endian %> "Load a contiguous block of memory with a fill pattern"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 8, 80) %>
  APPEND_PARAMETER MEM_TYPE           8 UINT MIN_UINT8 MAX_UINT8 1 "0=No Type, 1=RAM, 2=EEPROM"
  APPEND_PARAMETER PAD_8              8 UINT MIN_UINT8 MAX_UINT8 0 "Structure padding"
  APPEND_PARAMETER PAD_16            16 UINT MIN_UINT16 MAX_UINT16 0 "Structure padding"
  APPEND_PARAMETER NUM_BYTES         32 UINT MIN_UINT32 MAX_UINT32 0 "Number of bytes to fill"
  APPEND_PARAMETER FILL_PATTERN      32 UINT MIN_UINT32 MAX_UINT32 0 "Fill pattern to use"
  APPEND_PARAMETER ADDR_OFFSET       32 UINT MIN_UINT32 MAX_UINT32 0 "Offset from symbol or absolute address if no symbol specified"
  APPEND_PARAMETER ADDR_SYMBOL_NAME 512 STRING "default" "Symbol to be used as base address or empty string if no symbol"

COMMAND MM LOOKUP_SYMBOL <%= Osk::Cfg.processor_endian %> "Queries the system symbol table and reports the resolved address in telemetry and an informational event message"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 9, 64) %>
  APPEND_PARAMETER SYMBOL_NAME 512 STRING "default" "Symbol name string"

# TODO SYMBOLTBL_TO_FILE - Fix length & parameters
COMMAND MM SYMBOLTBL_TO_FILE <%= Osk::Cfg.processor_endian %> "Saves the system symbol table to a file that can be transfered to the ground"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 10, 64) %>
  APPEND_PARAMETER FILENAME 512 STRING "default" "FSW /path/filename of symbol dump file"

# TODO ENA_EEPROM_WRITE - Fix length & parameters
COMMAND MM ENA_EEPROM_WRITE <%= Osk::Cfg.processor_endian %> "Enables writing to a specified EEPROM bank"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 11, 4) %>
  APPEND_PARAMETER BANK 32 UINT MIN_UINT32 MAX_UINT32 0 "EEPROM bank number to write-enable"

# TODO DIS_EEPROM_WRITE - Fix length & parameters
COMMAND MM DIS_EEPROM_WRITE <%= Osk::Cfg.processor_endian %> "Disables writing to a specified EEPROM bank"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 12, 4) %>
  APPEND_PARAMETER BANK 32 UINT MIN_UINT32 MAX_UINT32 0 "EEPROM bank number to write-disable"
