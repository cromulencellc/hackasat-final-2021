<% 
  require 'fsw_config_param' 
  require 'osk_config' 
  require 'osk_global'

  @APP_PREFIX_STR = "FM2"
  @CMD_MID_STR    = "FM2_CMD_MID"

  # Configuration parameter assumptions
  #   OS_MAX_PATH_LEN = 64
  #   OS_MAX_API_NAME = 20
  
%>

COMMAND <%= @APP_PREFIX_STR %> <%= Osk::CMD_STR_NOOP %> <%= Osk::Cfg.processor_endian_adcs %> "Generate an info event message with app version"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 0, 0) %>

COMMAND <%= @APP_PREFIX_STR %> <%= Osk::CMD_STR_RESET %> <%= Osk::Cfg.processor_endian_adcs %> "Resets HK TLM parent and child task counters"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 1, 0) %>
  
COMMAND FM2 COPY_FILE <%= Osk::Cfg.processor_endian_adcs %> "Copy the source file to the target file."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 2, 130) %>
  APPEND_PARAMETER OVERWRITE 16 UINT MIN_UINT16 MAX_UINT16 0 "1 = Allow overwriting an existing target file"
  APPEND_PARAMETER SOURCE   512 STRING <%= Osk::CMD_DEF_FILENAME %>  "Complete source /path/filename"
  APPEND_PARAMETER TARGET   512 STRING <%= Osk::CMD_DEF_FILENAME %>  "Complete target /path/filename"

COMMAND FM2 MOVE_FILE <%= Osk::Cfg.processor_endian_adcs %> "Move the source file to the target file."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 3, 130) %>
  APPEND_PARAMETER OVERWRITE 16 UINT MIN_UINT16 MAX_UINT16 0 "1 = Allow overwriting an existing target file"
  APPEND_PARAMETER SOURCE   512 STRING <%= Osk::CMD_DEF_FILENAME %>  "Complete source /path/filename"
  APPEND_PARAMETER TARGET   512 STRING <%= Osk::CMD_DEF_FILENAME %>  "Complete source /path/filename"

COMMAND FM2 RENAME_FILE <%= Osk::Cfg.processor_endian_adcs %> "Rename the source file to the target file. Source must be an existing file and target must not exist. Source and target must both be on the same file system. The rename command does not actually move any file data. The command modifies the file system directory structure to create a different file entry for the same file data. If the user wishes to rename a file across file systems, he must first copy the file and then delete the original."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 4, 128) %>
  APPEND_PARAMETER SOURCE 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Source filename"
  APPEND_PARAMETER TARGET 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Target filename"

COMMAND FM2 DELETE_FILE <%= Osk::Cfg.processor_endian_adcs %> "Delete the source file. Source must be an existing file that is not open."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 5, 64) %>
  APPEND_PARAMETER FILENAME 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Delete filename"

COMMAND FM2 DELETE_ALL_FILES <%= Osk::Cfg.processor_endian_adcs %> "Delete all files in the source directory. Source must be an existing directory. Open files and sub-directories are not deleted. Because of the possibility that this command might take a very long time to complete, command argument validation will be done immediately but reading the directory and deleting each file will be performed by a lower priority child task. As such, the return value for this function only refers to the result of command argument verification and being able to place the command on the child task interface queue."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 7, 64) %>
  APPEND_PARAMETER DIRECTORY 512 STRING <%= Osk::CMD_DEF_DIR_NAME %> "Directory name"

COMMAND FM2 DECOMPRESS_FILE <%= Osk::Cfg.processor_endian_adcs %> "Decompress the source file into the target file. Source must be an existing file and target must not exist. Source and target may be on different file systems. Because of the possibility that this command might take a very long time to complete, command argument validation will be done immediately but decompressing the source file into the target file will be performed by a lower priority child task. As such, the return value for this function only refers to the result of command argument verification and being able to place the command on the child task interface queue."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 8, 128) %>
  APPEND_PARAMETER SOURCE 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Source filename"
  APPEND_PARAMETER TARGET 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Target filename"

COMMAND FM2 CONCAT_FILES <%= Osk::Cfg.processor_endian_adcs %> "Concatenate two source files into the target file. Sources must both be existing files and target must not exist. Sources and target may be on different file systems. Because of the possibility that this command might take a very long time to complete, command argument validation will be done immediately but copying the first source file to the target file and then appending the second source file to the target file will be performed by a lower priority child task. As such, the return value for this function only refers to the result of command argument verification and being able to place the command on the child task interface queue."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 9, 192) %>
  APPEND_PARAMETER SOURCE1 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Source 1 filename"
  APPEND_PARAMETER SOURCE2 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Source 2 filename"
  APPEND_PARAMETER TARGET  512 STRING <%= Osk::CMD_DEF_FILENAME %> "Target filename"

COMMAND FM2 SEND_FILE_INFO <%= Osk::Cfg.processor_endian_adcs %> "Create a file information telemetry packet for the specified file"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 10, 68) %>
  APPEND_PARAMETER FILENAME 512 STRING <%= Osk::CMD_DEF_FILENAME %>  "Filename"
  APPEND_PARAMETER CRC       32 UINT MIN_UINT32 MAX_UINT32 2         "CRC method"

COMMAND FM2 GET_OPEN_FILES <%= Osk::Cfg.processor_endian_adcs %> "Creates an 'open files' telemetry packet. The open files packet includes the number of open files and for each open file, the name of the file and the name of the application that has the file opened."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 11, 0) %>

COMMAND FM2 CREATE_DIR <%= Osk::Cfg.processor_endian_adcs %> "Create the source directory. Source must be a valid directory name that does not exist"
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 12, 64) %>
  APPEND_PARAMETER DIRECTORY 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Directory to be created"

COMMAND FM2 DELETE_DIR <%= Osk::Cfg.processor_endian_adcs %> "Delete the source directory, it does not delete the contents of the directory. Source must be a valid directory name that exists."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 13, 64) %>
  APPEND_PARAMETER DIRECTORY 512 STRING <%= Osk::CMD_DEF_FILENAME %> "Directory to be deleted"

COMMAND FM2 WRITE_DIR_TO_FILE <%= Osk::Cfg.processor_endian_adcs %> "Write a listing of the contents of the source directory to the target file. If the target filename buffer is empty, then the default target filename FM2_DIR_LIST_FILE_DEFNAME is used. The command will overwrite a previous copy of the target file, if one exists. Because of the possibility that this command might take a very long time to complete, command argument validation will be done immediately but reading the directory will be performed by a lower priority child task. As such, the return value for this function only refers to the result of command argument verification and being able to place the command on the child task interface queue."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 14, 132) %>
  APPEND_PARAMETER DIRECTORY     512 STRING <%= Osk::CMD_DEF_DIR_NAME %> "Directory to be listed"
  APPEND_PARAMETER FILENAME      512 STRING <%= FswConfigParam::BOOT_PATH+"/"+FswConfigParam::FM_DIR_LIST_FILE_DEFNAME %> "Filename"
  APPEND_PARAMETER SIZE_TIME_MODE  8 UINT MIN_UINT8  MAX_UINT8  0 "Option to query size, time, and mode of files (CPU intensive)"
  APPEND_PARAMETER SPARE           8 UINT MIN_UINT8  MAX_UINT8  0 "Pad to 16 bit boundary"
  APPEND_PARAMETER SPARE          16 UINT MIN_UINT8  MAX_UINT8  0 "Pad to 32 bit boundary"

COMMAND FM2 SEND_DIR_PKT <%= Osk::Cfg.processor_endian_adcs %> "Creates a telemetry packet that contains a listing of the entries in the specified directory. Since the packet will likely hold fewer entries than will be possible in a directory, the command also provides an index argument to define which entry in the directory is the first entry reported in the telemetry packet. After reading the directory list and skipping entries until reaching the index of the first entry reported, the remaining entries in the packet are filled sequentially until either the packet is full or until there are no more entries in the directory. The first entry index is zero based - thus, when the first entry index is zero the first directory entry will be the first packet entry. The number of entries per packet FM_DIR_LIST_PKT_ENTRIES is a platform configuration definition. Because of the possibility that this command might take a very long time to complete, command argument validation will be done immediately but reading the directory will be performed by a lower priority child task. As such, the return value for this function only refers to the result of command argument verification and being able to place the command on the child task interface queue."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 15, 72) %>
  APPEND_PARAMETER DIRECTORY       512 STRING <%= Osk::CMD_DEF_DIR_NAME %>  "Directory to bee listed"
  APPEND_PARAMETER DIR_LIST_OFFSET  32 UINT MIN_UINT32 MAX_UINT32 0 "Index of 1st dir entry to put in packet"
  APPEND_PARAMETER SIZE_TIME_MODE    8 UINT MIN_UINT8  MAX_UINT8  0 "Option to query size, time, and mode of files (CPU intensive)"
  APPEND_PARAMETER SPARE             8 UINT MIN_UINT8  MAX_UINT8  0 "Pad to 16 bit boundary"
  APPEND_PARAMETER SPARE            16 UINT MIN_UINT8  MAX_UINT8  0 "Pad to 32 bit boundary"

COMMAND FM2 SEND_FREE_SPACE_PKT <%= Osk::Cfg.processor_endian_adcs %> "Queries the amount of free space for each of the enabled entries in the file system free space table. The data is then placed in a telemetry packet and sent to ground."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 16, 0) %>

COMMAND FM2 SET_TABLE_STATE <%= Osk::Cfg.processor_endian_adcs %> "Enable/disable a single entry in the FM2 file system free space table. Unused table entries cannot be modified."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 17, 8) %>
  APPEND_PARAMETER TABLEENTRYINDEX 32 UINT MIN_UINT32 MAX_UINT32 0 "Table entry index"
  APPEND_PARAMETER TABLEENTRYSTATE 32 UINT MIN_UINT32 MAX_UINT32 0 "New table entry state"

COMMAND FM2 SET_FILE_PERMISSIONS <%= Osk::Cfg.processor_endian_adcs %> "Sets the permissions for a file. This is a direct interface to OS_chmod() in the OSAL."
  <%= Osk::Cfg.cmd_hdr(@APP_PREFIX_STR, @CMD_MID_STR, 19, 68) %>
  APPEND_PARAMETER FILENAME 512 STRING <%= Osk::CMD_DEF_DIR_NAME %>  "Filename"
  APPEND_PARAMETER MODE      32 UINT MIN_UINT32 MAX_UINT32 0 "Permissions, passed directly to OS_chmod()"
